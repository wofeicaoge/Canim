language: cpp
dist: bionic
notifications:
  email: false
cache: pip

# Define builds on mulitple OS/compiler combinations. 
# Feel free to add/remove entries from this list.
matrix:
  include:

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - lcov
      env:
        - MATRIX_EVAL="CXX_COMPILER=g++-7; sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-7 90"
        - COVERAGE=1

    - os: linux
      compiler:
        - clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - lcov
      env:
        - MATRIX_EVAL="sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-7 90"



install:
  - sudo apt-get install python3-pip python3-setuptools
  - pip3 install -r requirements.txt

before_script:
  - PARENTDIR=$(pwd)
  - mkdir $PARENTDIR/build
  - cd $PARENTDIR/build
  - conan install ..

script:
  - eval "${MATRIX_EVAL}"
  - cd $PARENTDIR/build
  - cmake $PARENTDIR -DCMAKE_BUILD_TYPE=Coverage -DCMAKE_CXX_COMPILER=$CXX_COMPILER
  - make
  - |
    if [[ "${COVERAGE}" == "1" ]]; then
      cmake $PARENTDIR -DCMAKE_BUILD_TYPE=Coverage -DCMAKE_CXX_COMPILER=$CXX_COMPILER
      make -j2
      make coverage -j2
    else
      cmake $PARENTDIR -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=$CXX_COMPILER
      make -j2
      ctest -j2
    fi

after_success:
  - |
    if [[ "${COVERAGE}" == "1" ]]; then
      cd $PARENTDIR/build
      lcov --list coverage_out.info.cleaned  # Show test report in travis log.
      gem install coveralls-lcov
      coveralls-lcov coverage_out.info.cleaned  # uploads to coveralls
      bash <(curl -s https://codecov.io/bash) -f coverage_out.info.cleaned || echo "Codecov did not collect coverage reports"
    fi
